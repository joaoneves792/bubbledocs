package pt.ulisboa.tecnico.bubbledocs.domain;

class Bubbledocs {
	Integer idGenerator;
}

relation DomainRootHasBubbledocsApplication {
	.pt.ist.fenixframework.DomainRoot playsRole root {
		multiplicity 0..1;
	}
	Bubbledocs playsRole bubbledocs {
		multiplicity 0..1;
	}
}

class Permission {
	Boolean writePermission;
}

relation BubbledocsHasPermissions {
	Bubbledocs playsRole permissionManager;
	Permission playsRole permission {
		multiplicity *;
	}
}	

class User {
	String name;
	String passwd;
	String email;
	String username;
}

class Root extends User;

class Spreadsheet {
	String  author;
	String  name;
	Integer rows;
	Integer columns;
	Integer id;
	LocalDate  date;
}

class Cell {
	Integer column;
	Integer row;
	Boolean protectd;
}

class Content;

class Function extends Content;

class SimpleContent extends Content;

class Literal extends SimpleContent {
	Integer value;
}

class Reference extends SimpleContent;

class Binary extends Function;

class Range extends Function;

class Add extends Binary;

class Sub extends Binary;

class Mul extends Binary;

class Div extends Binary; 

class Avg extends Range;

class Prd extends Range;

relation BubbledocsHasUsers {
	Bubbledocs playsRole bubbledocs;
	User playsRole user {
		multiplicity *;
	}
}

relation BubbledocsHasSpreadsheets {
	Bubbledocs playsRole bubbledocs;
	Spreadsheet playsRole spreadsheet {
		multiplicity *;
	}
}

relation SpreadsheetHasCells {
	Spreadsheet playsRole spreadsheet;
	Cell playsRole cell {
		multiplicity 1..*;
	}
}

relation CellHasContent {
	Cell playsRole cell;
	Content playsRole content;
}

relation BinaryHasArgumentOne {
	Binary playsRole binaryOne;
	SimpleContent playsRole argumentOne;
}

relation BinaryHasArgumentTwo {
	Binary playsRole binaryTwo;
	SimpleContent playsRole argumentTwo;
}

relation RangeHasReferenceOne {
	Range playsRole rangeOne;
	Reference playsRole referenceOne;
}

relation RangeHasReferenceTwo {
	Range playsRole rangeTwo;
	Reference playsRole referenceTwo;
}

class Session {
	Integer tokenInt;
	LocalDate  date;
}

relation BubbledocsHasSessions {
	Bubbledocs playsRole bubbledocs;
	Session playsRole session {
		multiplicity *;
	}
}

relation SpreadsheetHasPermissions {
	Permission playsRole permission {
		multiplicity *;
	}
	Spreadsheet playsRole spreadsheet;
}

relation UserHasPermissions {
	Permission playsRole permission {
		multiplicity *;
	}
	User playsRole user;
}

relation UserHasSession {
	User playsRole user;
	Session playsRole session;
}

relation CellIsReferencedBy {
	Cell playsRole referencedCell;
	Reference playsRole references {
		multiplicity *;
	}
}
